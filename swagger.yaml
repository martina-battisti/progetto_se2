swagger: '2.0'
info:
  version: '1.0'
  title: "SE2 group project - return to_sleep"
  description: Api for a exam and task system.
  license:
    name: MIT
    url: https://app-progettose2-return-tosleep.herokuapp.com/
host: polls.apiblueprint.org
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /users:
    post:
      tags:
      - "users"
      description: Crea un nuovo utente
      summary: Crea un nuovo utente
      parameters: 
         -  in: "body"
            name: "body"
            description: "Creazione di nuovo utente"
            required: true
            schema:
              $ref: "#/definitions/User"
        
      responses:
        201:
          description: 'successful operation'
          schema:
              $ref: "#/definitions/User"
    get:
      tags:
      - "users"
      description: "Ritorna l'elenco di tutti gli utenti"
      summary: "Trova tutti gli utenti"
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/User"}
            }
  /users/{username}:  
    put:
      tags:
      - "users"
      summary: "Updated user"
      description: "Modifica le informazioni dell'utente"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
        200:
          description: "Successful operation"
          schema:
              $ref: "#/definitions/User"
    delete:
      tags:
      - "users"
      summary: "Delete user"
      description: "Elimina l'utente"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
  /users/{username}/exams:  
    get:
      summary: "Recupera esami per un utente"
      description: ""
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Exam"}
            }
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found" 
  /users/login:
    get:
      summary: "Logs user into the system"
      description: ""
      responses:
        200:
          description: "successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/User"}
            }
        400:
          description: "Invalid username/password supplied"
  /users/logout:
    get:
      summary: "Logs out current logged in user session"
      description: ""
      responses:
        200:
          description: "successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/User"}
            }
  /tasks:
    post:
      tags:
      - "tasks"
      description: Consente di creare una nuova task
      summary: Crea una nuova task
      parameters: 
         -  in: "body"
            name: "body"
            description: "Creazione di nuovo task"
            required: true
            schema:
              $ref: "#/definitions/Task"
      responses:
        201:
          description: 'successful operation'
          schema:
              $ref: "#/definitions/Task"
    get:
      tags:
      - "tasks"
      description: Ritorna l'elenco di tutte le task
      summary: Trova tutte le tasks
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Task"}
            }
  /tasks/{taskid}:
    get:
      tags:
      - "tasks"
      description: Ritorna una task
      parameters:
      - name: "taskid"
        in: "path"
        description: "The taskid that needs to get"
        required: true
        type: "string"
      summary: Trova una task tramite id
      responses:
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Task'
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Task not found'
    put:
      tags:
      - "tasks"
      description: Consente di modificare una task esistente
      parameters:
      - name: "taskid"
        in: "path"
        description: "The taskid that needs to get"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated task"
        required: true
        schema:
          $ref: "#/definitions/Task"
      summary: Modifica una task
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Task not found'
        405:
          description: 'Validation exception'
    delete:
      tags:
      - "tasks"
      description: Elimina una task
      parameters:
      - name: "taskid"
        in: "path"
        description: "The taskid that needs to be deleted"
        required: true
        type: "string"
      summary: Elimina una task
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Task not found'
  
  /exams:
    post:
      tags:
      - "exams"
      description: Consente di creare un nuovo esame
      summary: Crea un un nuovo esame
      parameters: 
         -  in: "body"
            name: "body"
            description: "Creazione di nuovo esame"
            required: true
            schema:
              $ref: "#/definitions/Exam"
      responses:
        201:
          description: 'successful operation'
          schema:
              $ref: "#/definitions/Exam"
    get:
      tags:
      - "exams"
      description: "Ritorna l'elenco di tutti gli esami"
      summary: "Trova tutti gli esami"
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Exam"}
            }
  /exams/{examid}:
    get:
      tags:
      - "exams"
      description: Ritorna un esame
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to get"
        required: true
        type: "string"
      summary: Trova un esame tramite id
      responses:
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Exam'
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Exam not found'
    put:
      tags:
      - "exams"
      description: Consente di modificare un esame esistente aggiungendo gruppi e task
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated task"
        required: true
        schema:
          $ref: "#/definitions/Exam"
      summary: Modifica un esame
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Exam not found'
        405:
          description: 'Validation exception'
        200:
          description: 'Successful operation'
          schema:
            $ref: "#/definitions/Exam"
    delete:
      tags:
      - "exams"
      description: Elimina un esame
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to delete"
        required: true
        type: "string"
      summary: Elimina un esame
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Exam not found'
  /exams/{examid}/tasks:
    get:
      tags:
      - "exams"
      description: Ritorna le tasks di un esame
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to get"
        required: true
        type: "string"
      summary: Ritorna tutte le task inserite in un esame
      responses:
        200:
          description: 'Success'
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Task"}
            }
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Exam not found'
  /exams/{examid}/submit:
    post:
      tags:
      - "exams"
      description: Invia le risposte di tutti i task di un esame
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to get"
        required: true
        type: "string"
      summary: Invia answers
      responses:
        201:
          description: 'successful operation'
          
              
  /exams/{examid}/groups:
    get:
      tags:
      - "exams"
      description: Ritorna i gruppi a cui è assegnato l'esame
      parameters:
      - name: "examid"
        in: "path"
        description: "The examid that needs to get"
        required: true
        type: "string"
      summary: Ritorna una lista dei gruppi ai quali è stato assegnato uno specifico esame
      responses:
        200:
          description: 'Success'
          schema:
            {
              "type": "array",
              "items": { 
              "$ref": "#/definitions/Group"}
            }
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Exam not found'
          
  /groups:
    post:
      tags:
      - "groups"
      description: Consente di creare un nuovo gruppo
      summary: Crea un un nuovo gruppo
      parameters: 
         -  in: "body"
            name: "body"
            description: "Creazione di nuovo gruppo"
            required: true
            schema:
              $ref: "#/definitions/Group"
      responses:
        201:
          description: 'Successful operation'
    get:
      tags:
      - "groups"
      description: "Ritorna l'elenco di tutti i gruppi"
      summary: "Trova tutti i gruppi"
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Group"}
            }
  /groups/{groupid}:
    get:
      tags:
      - "groups"
      description: Ritorna un gruppo
      parameters:
      - name: "groupid"
        in: "path"
        description: "The groupid that needs to get"
        required: true
        type: "string"
      summary: Trova un gruppo tramite id
      responses:
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Group'
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Group not found'
    put:
      tags:
      - "groups"
      description: Consente di modificare un gruppo esistente
      parameters:
      - name: "groupid"
        in: "path"
        description: "The groupid that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated task"
        required: true
        schema:
          $ref: "#/definitions/Group"
      summary: Modifica un gruppo
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Group not found'
        405:
          description: 'Validation exception'
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Group'
    delete:
      tags:
      - "groups"
      description: Elimina un esame
      parameters:
      - name: "groupid"
        in: "path"
        description: "The groupid that needs to delete"
        required: true
        type: "string"
      summary: Elimina un gruppo
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Group not found'
          
  /answers:
    post:
      tags:
      - "answers"
      description: Consente di creare una nuova risposta
      summary: Crea una nuova risposta
      parameters: 
         -  in: "body"
            name: "body"
            description: "Creazione di nuovo risposta"
            required: true
            schema:
              $ref: "#/definitions/Answer"
      responses:
        201:
          description: 'Successful operation'
    get:
      tags:
      - "answers"
      description: "Ritorna l'elenco di tutte le risposte"
      summary: "Trova tutte le risposte"
      responses:
        200:
          description: "Successful operation"
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Answer"}
            }
  /answers/{answerid}:
    get:
      tags:
      - "answers"
      description: Ritorna una risposta
      parameters:
      - name: "answerid"
        in: "path"
        description: "The answerid that needs to get"
        required: true
        type: "string"
      summary: Trova una risposta tramite id
      responses:
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Answer'
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Answer not found'
    

    put:
      tags:
      - "answers"
      description: Consente di modificare una risposta esistente
      parameters:
      - name: "answerid"
        in: "path"
        description: "The answerid that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated task"
        required: true
        schema:
          $ref: "#/definitions/Answer"
      summary: Modifica una risposta
      responses:
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Answer not found'
        405:
          description: 'Validation exception'
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Answer'
  /reviews:
    post:
      tags:
      - "reviews"
      description: Crea una nuova review
      summary: Crea una nuova review
      parameters: 
         -  in: "body"
            name: "reviews"
            description: "Creazione di una nuova review"
            required: true
            schema:
              $ref: "#/definitions/Review"
        
      responses:
        201:
          description: 'successful operation'
          schema:
            {
              "type": "array",
              "items": {
              "$ref": "#/definitions/Review"}
            }
              
              
  /reviews/{userid}:
    get:
      tags:
      - "reviews"
      description: Ritorna una risposta
      parameters:
      - name: "userid"
        in: "path"
        description: "The userid that needs to get"
        required: true
        type: "string"
      summary: Trova tutte le review tramite id
      responses:
        200:
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Review'
        400:
          description: 'Invalid ID supplied'
        404:
          description: 'Answer not found'

definitions:
  Task:
    title: Task
    type: object
    properties:
      taskid:
        type: integer
        format: int32
      tipologia:
        type: string
        enum:
          - $ref: '#/definitions/Aperta'
          - $ref: '#/definitions/Radiobox'
          - $ref: '#/definitions/Checkbox'
    required:
      - taskid
      - tipologia

  Radiobox:
    title: Radiobox
    type: object
    properties:
      domanda: 
        type: string
      options:
        type: array
        items: 
          $ref: '#/definitions/Choice'
      risposta: 
        type: string
    required:
      - domanda
      - choices

  Checkbox:
    title: Checkbox
    type: object
    properties:
      domanda: 
        type: string
      options: 
        type: array
        items:
          $ref: '#/definitions/Choice'
      risposta: 
        type: array
        items:
          type: string
    required:
      - domanda
      - choices

  Choice:
    title: Choice
    type: object
    properties:
      choice: 
        type: string
      selection: 
        type: boolean
    required:
     - choice

  Aperta:
    title: Aperta
    type: object
    properties:
      domanda: 
        type: string
      riposta: 
        type: string
    required: 
      - domanda

  User:
    title: User
    type: object
    properties:
      username: 
        type: string
      nome: 
        type: string
      cognome: 
        type: string
      email: 
        type: string
      matricola:
        type: integer
        format: int32
    required:
      - username
      - matricola
      - nome
      - cognome
      - email

  Group:
    title: Group
    type: object
    properties:
      groupid: 
        type: integer
        format: int32
      componenti: 
        type: array
        items:
          $ref: '#/definitions/User'
    required:
      - groupid
      - title
      - componenti

  Exam:
    title: Exam
    type: object
    properties:
      examid:
        type: integer
        format: int32
      nome_esame:
        type: string
      creator:
        type: integer
        format: int32
      tasks: 
        type: array
        items:
          type: integer
          format: int32
      groups: 
        type: array
        items:
          type: integer
          format: int32
    required:
      - examid
      - nome_esame
      - creator
      - tasks
      - groups
      

  Answer:
    title: Answer
    type: object
    properties:
      answerid:
        type: integer
        format: int32
      taskid:
        type: integer
        format: int32
      user:
        type: object
        $ref: '#/definitions/User'
      risposta:
        type: string
      tempo:
        type: string
        format: date-time
    required:
      - title
      - answerid
      - taskid
      - user
      - risposta
      - tempo
      
  Deadline:
    properties:
      durata:
        type: "integer"
        format: "int64"
        default: "null"
  Review:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      creator:
        type: object
        $ref: '#/definitions/User'
      reviewer:
        type: "array"
        items:
          type: "integer"
          format: "int64"
      deadline:
        $ref: "#/definitions/Deadline"
     